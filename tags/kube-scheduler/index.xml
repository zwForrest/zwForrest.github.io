<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kube-scheduler on Welcome to zForrest</title>
    <link>https://zwForrest.github.io/tags/kube-scheduler/</link>
    <description>Recent content in kube-scheduler on Welcome to zForrest</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 09 Oct 2020 18:03:56 +0800</lastBuildDate>
    
	<atom:link href="https://zwForrest.github.io/tags/kube-scheduler/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Kubernetes] kube-scheduler源码分析(四)</title>
      <link>https://zwForrest.github.io/post/kube-scheduler-%E5%9B%9B/</link>
      <pubDate>Fri, 09 Oct 2020 18:03:56 +0800</pubDate>
      
      <guid>https://zwForrest.github.io/post/kube-scheduler-%E5%9B%9B/</guid>
      <description>这篇文章将单独分析调度过程中关于volumeBinding插件的内容，这里会涉及到Filter的逻辑，并且这部分结果在调度的assume阶段</description>
    </item>
    
    <item>
      <title>[Kubernetes] kube-scheduler源码分析(三)</title>
      <link>https://zwForrest.github.io/post/kube-scheduler-%E4%B8%89/</link>
      <pubDate>Wed, 07 Oct 2020 18:03:56 +0800</pubDate>
      
      <guid>https://zwForrest.github.io/post/kube-scheduler-%E4%B8%89/</guid>
      <description>前面分析完调度和抢占过程，接下来将分析后面的工作。在完成前面两个步骤之后，将会进行assumePod,reserve,permit,bind</description>
    </item>
    
    <item>
      <title>[Kubernetes] kube-scheduler源码分析(二)</title>
      <link>https://zwForrest.github.io/post/kube-scheduler-%E4%BA%8C/</link>
      <pubDate>Mon, 05 Oct 2020 18:03:56 +0800</pubDate>
      
      <guid>https://zwForrest.github.io/post/kube-scheduler-%E4%BA%8C/</guid>
      <description>上篇介绍了调度的PreFilter,Filter,PreScore,Score部分，本文将介绍Preempt部分。 在调度过程中没有合适的节点</description>
    </item>
    
    <item>
      <title>[Kubernetes] kube-scheduler源码分析(一)</title>
      <link>https://zwForrest.github.io/post/kube-scheduler-%E4%B8%80/</link>
      <pubDate>Sat, 03 Oct 2020 18:03:56 +0800</pubDate>
      
      <guid>https://zwForrest.github.io/post/kube-scheduler-%E4%B8%80/</guid>
      <description>本文将基于1.18版本进行分析。 本是出于好奇调度器的framework是如何设计的，它到底是怎么做到将自定义的插件和原生的插件编译到一起，从</description>
    </item>
    
  </channel>
</rss>